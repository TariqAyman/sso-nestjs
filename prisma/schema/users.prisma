// User Management Models
// Contains User model and related authentication/profile models

// =========================================================================
// 1. USER MANAGEMENT MODELS
// =========================================================================
// Main user model with Nafath SSO integration and complete profile management
// Related models: UserActivation, ForgotPassword, LastLogin, PasswordResetToken
// Documentation: prisma/schema/users.prisma

model User {
    id                 BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
    identify           String?   @unique @db.VarChar(255) // national_id / iqama
    name               String?   @db.VarChar(255)
    nameAr             String?   @map("name_ar") @db.VarChar(255)
    email              String?   @unique @db.VarChar(255)
    phone              String?   @db.VarChar(20)
    phoneCode          String?   @map("phone_code") @db.VarChar(5)
    identifyVerifiedAt DateTime? @map("identify_verified_at")
    emailVerifiedAt    DateTime? @map("email_verified_at")
    phoneVerifiedAt    DateTime? @map("phone_verified_at")
    password           String?   @db.VarChar(255)
    role               Int       @default(0) @db.TinyInt
    type               Int       @default(0) @db.TinyInt
    passportImage      String?   @map("passport_image") @db.VarChar(255)
    rememberToken      String?   @map("remember_token") @db.VarChar(100)
    dateOfBirth        DateTime? @map("date_of_birth") @db.Date
    nationality        String?   @db.VarChar(255)
    country            String?   @db.VarChar(255)
    nationalityCode    Int?      @map("nationality_code")
    oldId              Int?      @map("old_id")
    createdAt          DateTime  @default(now()) @map("created_at")
    updatedAt          DateTime  @updatedAt @map("updated_at")

    // Legacy fields for backward compatibility
    fullName          String?   @map("full_name") @db.VarChar(255)
    firstName         String?   @map("first_name") @db.VarChar(100)
    lastName          String?   @map("last_name") @db.VarChar(100)
    avatar            String?   @db.VarChar(500)
    emailVerified     Boolean?  @default(false) @map("email_verified")
    verified          Boolean?  @default(false)
    verifiedAt        DateTime? @map("verified_at")
    status            String?   @default("active") @db.VarChar(50)
    twoFactorEnabled  Boolean?  @default(false) @map("two_factor_enabled")
    twoFactorSecret   String?   @map("two_factor_secret") @db.VarChar(255)
    profilePicture    String?   @map("profile_picture") @db.VarChar(500)
    timezone          String?   @db.VarChar(100)
    language          String?   @default("en") @db.VarChar(10)
    lastLoginAt       DateTime? @map("last_login_at")
    lastLoginIp       String?   @map("last_login_ip") @db.VarChar(45)
    loginAttempts     Int?      @default(0) @map("login_attempts")
    lockedUntil       DateTime? @map("locked_until")
    passwordChangedAt DateTime? @map("password_changed_at")

    // Relations
    userActivations      UserActivation[]
    forgotPasswords      ForgotPassword[]
    lastLogins           LastLogin[]
    ssoApplications      SsoApplication[]
    oauthConnections     OauthConnection[]
    authorizationCodes   AuthorizationCode[]
    refreshTokens        RefreshToken[]
    personalAccessTokens PersonalAccessToken[]
    modelHasPermissions  ModelHasPermission[]
    modelHasRoles        ModelHasRole[]

    @@map("users")
}

// User activation tokens for email/phone verification
model UserActivation {
    id        Int       @id @default(autoincrement())
    userId    BigInt    @map("user_id") @db.UnsignedBigInt
    token     String    @unique @db.VarChar(255)
    type      String    @db.VarChar(50) // email, phone, etc.
    expiresAt DateTime  @map("expires_at")
    usedAt    DateTime? @map("used_at")
    ipAddress String?   @map("ip_address") @db.VarChar(45)
    userAgent String?   @map("user_agent") @db.Text
    createdAt DateTime  @default(now()) @map("created_at")

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("user_activations")
}

// Password reset functionality
model ForgotPassword {
    id        Int       @id @default(autoincrement())
    userId    BigInt    @map("user_id") @db.UnsignedBigInt
    token     String    @unique @db.VarChar(255)
    expiresAt DateTime  @map("expires_at")
    usedAt    DateTime? @map("used_at")
    ipAddress String?   @map("ip_address") @db.VarChar(45)
    userAgent String?   @map("user_agent") @db.Text
    createdAt DateTime  @default(now()) @map("created_at")

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("forgot_passwords")
}

// User login history and security tracking
model LastLogin {
    id            Int      @id @default(autoincrement())
    userId        BigInt   @map("user_id") @db.UnsignedBigInt
    ipAddress     String   @map("ip_address") @db.VarChar(45)
    userAgent     String?  @map("user_agent") @db.Text
    location      String?  @db.VarChar(255)
    device        String?  @db.VarChar(255)
    browser       String?  @db.VarChar(255)
    os            String?  @db.VarChar(255)
    successful    Boolean  @default(true)
    failureReason String?  @map("failure_reason") @db.VarChar(255)
    loginAt       DateTime @default(now()) @map("login_at")

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("last_logins")
}

// Laravel-style password reset tokens
model PasswordResetToken {
    email     String    @id @db.VarChar(255)
    token     String    @db.VarChar(255)
    createdAt DateTime  @default(now()) @map("created_at")
    expiresAt DateTime? @map("expires_at")

    @@map("password_reset_tokens")
}
